{
  "stats": {
    "suites": 2,
    "tests": 28,
    "passes": 28,
    "pending": 0,
    "failures": 0,
    "start": "2024-04-18T11:28:19.063Z",
    "end": "2024-04-18T11:28:38.450Z",
    "duration": 19387,
    "testsRegistered": 28,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8b5f562e-e089-403e-b42b-3cab3e8209ff",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "83486617-6dd9-4c81-b75c-a0578c4e153a",
          "title": "certificate",
          "fullFile": "H:\\Assignments\\Selenium\\report\\test\\index.js",
          "file": "\\test\\index.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"certificate\"",
              "fullTitle": "certificate \"before all\" hook in \"certificate\"",
              "timedOut": false,
              "duration": 1219,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = new webdriver.Builder().\nwithCapabilities(webdriver.Capabilities.chrome()).\nbuild();",
              "err": {},
              "uuid": "7cbfbe3b-eb48-4e0f-ae50-4a39061a3a3e",
              "parentUUID": "83486617-6dd9-4c81-b75c-a0578c4e153a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify the validity of a given certificate number",
              "fullTitle": "certificate Verify the validity of a given certificate number",
              "timedOut": false,
              "duration": 11442,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('file:///H:/Assignments/Selenium/Certificate%20Selenium/sample-code/preview.html');\n    var getTitle = await driver.findElement(webdriver.By.className('sr-no'));\n    getTitle.getText('value').then(function(value) {\n    assert.equal(value, 'Certificate Number:');\n    });",
              "err": {},
              "uuid": "7599af77-4ae8-47ba-a7fd-62c09065c4cd",
              "parentUUID": "83486617-6dd9-4c81-b75c-a0578c4e153a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "mm unit",
              "fullTitle": "certificate mm unit",
              "timedOut": false,
              "duration": 43,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    \n     // Find the element whose width needs to be checked\n     let element = await driver.findElement(webdriver.By.className('certificate-wrapper')); {\n\n     // Get the CSS value of the width property\n     let widthCssValue = await driver.executeScript('return window.getComputedStyle(arguments[0]).width', element);\n\t\t\n\t\t\n\t\t\n\t\t// Get all the style sheets that are applied to the document.\nconst styleSheets = document.styleSheets;\n\n// Iterate over the style sheets and access the CSS rules for each style sheet.\nfor (const styleSheet of styleSheets) {\n  // Get the CSS rules for the style sheet.\n  const cssRules = styleSheet.cssRules;\n\n  // Iterate over the CSS rules and print them to the console.\n  for (const cssRule of cssRules) {\n if(cssRule == '.mm') console.log(cssRule)\n  }\n}\n\t\t\n\t\t\n\t\t\n\t\t\nconsole.log(widthCssValue)\n      if (!widthCssValue.endsWith('mm')) {\n         console.log('Assertion failed: Element width is not in millimeters (mm) unit');\n     } else {\n         console.log('Width assertion passed! Element width is in mm unit.');\n     }\n }\n\t}\tcatch (error) {\n     console.error('Error:', error.message);\n }",
              "err": {},
              "uuid": "3cc83273-07e5-434c-8c56-b921421bc901",
              "parentUUID": "83486617-6dd9-4c81-b75c-a0578c4e153a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Certificate Title",
              "fullTitle": "certificate Verify Certificate Title",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('title'));\ngetTitle.getText('value').then(function(value) {\n  assert.equal(value, 'Certificate');\n});",
              "err": {},
              "uuid": "c8197d26-b399-4892-b6f3-bce452841628",
              "parentUUID": "83486617-6dd9-4c81-b75c-a0578c4e153a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To verify the certificate subtitle",
              "fullTitle": "certificate To verify the certificate subtitle",
              "timedOut": false,
              "duration": 22,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('subtitle'));\ngetTitle.getText('value').then(function(value) {\nassert.equal(value, 'of Appreciation');\n});",
              "err": {},
              "uuid": "a992a072-c6ac-4759-bb16-e586cda04a05",
              "parentUUID": "83486617-6dd9-4c81-b75c-a0578c4e153a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Initial Content of Certificate",
              "fullTitle": "certificate Verify Initial Content of Certificate",
              "timedOut": false,
              "duration": 23,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('initial-content'));\ngetTitle.getText('value').then(function(value) {\nassert.equal(value, 'This Certificate is proudly presented to');\n});",
              "err": {},
              "uuid": "159794d7-3639-46b7-8292-9f1e9b794710",
              "parentUUID": "83486617-6dd9-4c81-b75c-a0578c4e153a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To ensure that the main content of the certificate is accurate and complete",
              "fullTitle": "certificate To ensure that the main content of the certificate is accurate and complete",
              "timedOut": false,
              "duration": 22,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('main-content'));\ngetTitle.getText('value').then(function(value) {\nassert.equal(value, 'for successfully completing the training course as\\nprescribed by the organisation');\n});",
              "err": {},
              "uuid": "48f8cc4d-7957-4723-8383-26d92b898cb2",
              "parentUUID": "83486617-6dd9-4c81-b75c-a0578c4e153a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To ensure that the date on the certificate is accurate and valid",
              "fullTitle": "certificate To ensure that the date on the certificate is accurate and valid",
              "timedOut": false,
              "duration": 22,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('date'));\ngetTitle.getText('value').then(function(value) {\nassert.equal(value, 'Date:');\n});",
              "err": {},
              "uuid": "ad0046da-6d07-4341-9f12-9ffa64475d0a",
              "parentUUID": "83486617-6dd9-4c81-b75c-a0578c4e153a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To verify that the candidate name displayed on the certificate matches the expected name",
              "fullTitle": "certificate To verify that the candidate name displayed on the certificate matches the expected name",
              "timedOut": false,
              "duration": 22,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('candidate-name'));\ngetTitle.getText('value').then(function(value) {\nassert.equal(value, 'Name of Candidate');\n});",
              "err": {},
              "uuid": "394fb13f-ebec-4c22-8e10-6fa5677ee4c0",
              "parentUUID": "83486617-6dd9-4c81-b75c-a0578c4e153a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To ensure that the certificate signature of the president is authentic and valid",
              "fullTitle": "certificate To ensure that the certificate signature of the president is authentic and valid",
              "timedOut": false,
              "duration": 22,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('sign-president'));\ngetTitle.getText('value').then(function(value) {\nassert.equal(value, 'Signature of President');\n});",
              "err": {},
              "uuid": "8fa58af5-58c2-454d-9b67-9e736d27de12",
              "parentUUID": "83486617-6dd9-4c81-b75c-a0578c4e153a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To ensure that the certificate signature of the director  is authentic and valid",
              "fullTitle": "certificate To ensure that the certificate signature of the director  is authentic and valid",
              "timedOut": false,
              "duration": 21,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('sign-director'));\ngetTitle.getText('value').then(function(value) {\nassert.equal(value, 'Signature of Director');\n});",
              "err": {},
              "uuid": "4b152e11-77e7-48dd-b550-e261b9f6bfe2",
              "parentUUID": "83486617-6dd9-4c81-b75c-a0578c4e153a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify that the logo displayed matches the official logo of the issuing organization",
              "fullTitle": "certificate Verify that the logo displayed matches the official logo of the issuing organization",
              "timedOut": false,
              "duration": 37,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    \n    // Find the logo image element\n    const logoElement = await driver.findElement(webdriver.By.xpath(\"//div[@class='org-logo']//img\"));\n    // Check if the logo image is loaded successfully\n    const isLoaded = await logoElement.isDisplayed();\n    // Assert that the logo image is loaded successfully\n    assert.strictEqual(isLoaded, true, 'Logo image is not loaded successfully');\n    console.log('Logo image loaded successfully!');\n} catch (error) {\n    console.error('Logo image loading test failed:', error.message);\n}",
              "err": {},
              "uuid": "b1b9a363-b85b-44a9-8642-387d78d829e6",
              "parentUUID": "83486617-6dd9-4c81-b75c-a0578c4e153a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Organization Name on Certificate",
              "fullTitle": "certificate Verify Organization Name on Certificate",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('org-name'));\ngetTitle.getText('value').then(function(value) {\nassert.equal(value, 'Maha Mission Education and Career Council');\n});",
              "err": {},
              "uuid": "f2c56451-36d2-44f9-b5ec-abca0424d4d8",
              "parentUUID": "83486617-6dd9-4c81-b75c-a0578c4e153a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify that the address matches the official address of the organization",
              "fullTitle": "certificate Verify that the address matches the official address of the organization",
              "timedOut": false,
              "duration": 22,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('org-address'));\ngetTitle.getText('value').then(function(value) {\nassert.equal(value, 'Office No. 404, Vastu Viva, Besids Sanket Inn, Bhumkar Chowk\\n\\nWakad, Pune, Maharashtra - 411057');\n});\ndriver.quit();",
              "err": {},
              "uuid": "335913e9-967b-44c1-b5fd-9d0d5d86b562",
              "parentUUID": "83486617-6dd9-4c81-b75c-a0578c4e153a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7599af77-4ae8-47ba-a7fd-62c09065c4cd",
            "3cc83273-07e5-434c-8c56-b921421bc901",
            "c8197d26-b399-4892-b6f3-bce452841628",
            "a992a072-c6ac-4759-bb16-e586cda04a05",
            "159794d7-3639-46b7-8292-9f1e9b794710",
            "48f8cc4d-7957-4723-8383-26d92b898cb2",
            "ad0046da-6d07-4341-9f12-9ffa64475d0a",
            "394fb13f-ebec-4c22-8e10-6fa5677ee4c0",
            "8fa58af5-58c2-454d-9b67-9e736d27de12",
            "4b152e11-77e7-48dd-b550-e261b9f6bfe2",
            "b1b9a363-b85b-44a9-8642-387d78d829e6",
            "f2c56451-36d2-44f9-b5ec-abca0424d4d8",
            "335913e9-967b-44c1-b5fd-9d0d5d86b562"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11728,
          "root": false,
          "rootEmpty": false,
          "_timeout": 15000
        },
        {
          "uuid": "402da432-d5c4-4806-bd7d-3833aed9f624",
          "title": "Letter",
          "fullFile": "H:\\Assignments\\Selenium\\report\\test\\index.js",
          "file": "\\test\\index.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Letter\"",
              "fullTitle": "Letter \"before all\" hook in \"Letter\"",
              "timedOut": false,
              "duration": 1002,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = new webdriver.Builder().\nwithCapabilities(webdriver.Capabilities.chrome()).\nbuild();",
              "err": {},
              "uuid": "c391f35a-8b45-491b-8ef2-c5a175408c4f",
              "parentUUID": "402da432-d5c4-4806-bd7d-3833aed9f624",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check Presence of Company Name in Letter",
              "fullTitle": "Letter Check Presence of Company Name in Letter",
              "timedOut": false,
              "duration": 4963,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('file:///H:/Assignments/Selenium/Letter%20Selenium/04%20Letter%20Head/sample-code/preview.html');\n    var getTitle = await driver.findElement(webdriver.By.className('letter-org-name'));\n    getTitle.getText('value').then(function(value) {\n    assert.equal(value, '');\n \n    });",
              "err": {},
              "uuid": "a6af429b-7669-4c82-a4af-6c26cba7570a",
              "parentUUID": "402da432-d5c4-4806-bd7d-3833aed9f624",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Letter Organization Details Verification",
              "fullTitle": "Letter Letter Organization Details Verification",
              "timedOut": false,
              "duration": 36,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('letter-org-details'));\n    getTitle.getText('value').then(function(value) {\n    assert.equal(value, '');\n    });",
              "err": {},
              "uuid": "38fe7df4-464a-42df-b235-754d2396a63c",
              "parentUUID": "402da432-d5c4-4806-bd7d-3833aed9f624",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Letter Organization Logo Display",
              "fullTitle": "Letter Verify Letter Organization Logo Display",
              "timedOut": false,
              "duration": 32,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('letter-org-logo'));\n    getTitle.getText('value').then(function(value) {\n    assert.equal(value, '');\n    });",
              "err": {},
              "uuid": "7587bb79-5997-42bf-a09f-af2a008c0636",
              "parentUUID": "402da432-d5c4-4806-bd7d-3833aed9f624",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Letter Organization Logo Display",
              "fullTitle": "Letter Verify Letter Organization Logo Display",
              "timedOut": false,
              "duration": 51,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    \n    // Find the logo image element\n    const logoElement = await driver.findElement(webdriver.By.xpath(\"//div[@class='letter-org-logo']//img\"));\n    // Check if the logo image is loaded successfully\n    const isLoaded = await logoElement.isDisplayed();\n    // Assert that the logo image is loaded successfully\n    assert.strictEqual(isLoaded, true, 'Logo image is not loaded successfully');\n    console.log('Logo image loaded successfully!');\n} catch (error) {\n    console.error('Logo image loading test failed:', error.message);\n}",
              "err": {},
              "uuid": "748f28f5-05c2-4eb2-9a20-48300b055cdb",
              "parentUUID": "402da432-d5c4-4806-bd7d-3833aed9f624",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To check the validity of a letter reference number",
              "fullTitle": "Letter To check the validity of a letter reference number",
              "timedOut": false,
              "duration": 22,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('letter-ref'));\ngetTitle.getText('value').then(function(value) {\n//assert.equal(value, 'Ref. No:');\n\tassert.match(/Ref. No:\\s*(.+)/);\n});",
              "err": {},
              "uuid": "1b07f9e3-5f9a-4398-95ad-d4c147c67613",
              "parentUUID": "402da432-d5c4-4806-bd7d-3833aed9f624",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To confirm that the date on the letter is accurate",
              "fullTitle": "Letter To confirm that the date on the letter is accurate",
              "timedOut": false,
              "duration": 23,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('letter-date'));\ngetTitle.getText('value').then(function(value) {\n//assert.equal(value, 'Date:');\n\tassert.match(/^Date: \\d{2}-\\d{2}-\\d{4}$/);\n});",
              "err": {},
              "uuid": "bcb61495-959c-49ef-a307-e233046fd46c",
              "parentUUID": "402da432-d5c4-4806-bd7d-3833aed9f624",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To verify that the body of the letter is correctly addressed to the recipient",
              "fullTitle": "Letter To verify that the body of the letter is correctly addressed to the recipient",
              "timedOut": false,
              "duration": 26,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('letter-body-to'));\ngetTitle.getText('value').then(function(value) {\n//assert.equal(value, 'To,');\n\tassert.match(/To,\\s*/);\n});",
              "err": {},
              "uuid": "fbd7d9c8-a8bd-40bb-9bb4-75dbdb7c5e12",
              "parentUUID": "402da432-d5c4-4806-bd7d-3833aed9f624",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check Letter Body and Subject",
              "fullTitle": "Letter Check Letter Body and Subject",
              "timedOut": false,
              "duration": 22,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('letter-body-subject'));\ngetTitle.getText('value').then(function(value) {\n//assert.equal(value, '/^Subject:\\s*/');\n\t assert.match(value, /^Subject:\\s*/);\n});",
              "err": {},
              "uuid": "e596b601-b854-44b9-a707-3cfbe9384410",
              "parentUUID": "402da432-d5c4-4806-bd7d-3833aed9f624",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Letter Salutation",
              "fullTitle": "Letter Verify Letter Salutation",
              "timedOut": false,
              "duration": 24,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('letter-body-salutation'));\ngetTitle.getText('value').then(function(value) {\n   // assert.equal(value, 'Dear');\n   assert.match(/^(Dear)/);\n});",
              "err": {},
              "uuid": "5d7fafc9-1ab3-4452-a49f-df554c3dbab5",
              "parentUUID": "402da432-d5c4-4806-bd7d-3833aed9f624",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Letter Body Message",
              "fullTitle": "Letter Verify Letter Body Message",
              "timedOut": false,
              "duration": 23,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('letter-body-message'));\ngetTitle.getText('value').then(function(value) {\nassert.equal(value, '');\n});",
              "err": {},
              "uuid": "f0ab9413-84fa-449f-ba40-f281d6aee6b3",
              "parentUUID": "402da432-d5c4-4806-bd7d-3833aed9f624",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify that the body sign in the letter is correctly displayed",
              "fullTitle": "Letter Verify that the body sign in the letter is correctly displayed",
              "timedOut": false,
              "duration": 25,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('letter-body-sign'));\ngetTitle.getText('value').then(function(value) {\nassert.equal(value, '');\n});",
              "err": {},
              "uuid": "1a5f63ec-e0be-4521-b487-c6f24672be58",
              "parentUUID": "402da432-d5c4-4806-bd7d-3833aed9f624",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "The website should be present in the footer of the letter",
              "fullTitle": "Letter The website should be present in the footer of the letter",
              "timedOut": false,
              "duration": 23,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('letter-org-website'));\ngetTitle.getText('value').then(function(value) {\nassert.equal(value, 'WWW.WEBTOUCHINDIA@CO.IN');\n});",
              "err": {},
              "uuid": "162980a2-cfc9-48d0-a672-fc880de9fc72",
              "parentUUID": "402da432-d5c4-4806-bd7d-3833aed9f624",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "The phone should be present in the footer of the letter",
              "fullTitle": "Letter The phone should be present in the footer of the letter",
              "timedOut": false,
              "duration": 25,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('letter-org-phone'));\ngetTitle.getText('value').then(function(value) {\nassert.equal(value, '');\n});",
              "err": {},
              "uuid": "d045ffb8-1c59-47d1-9e38-7f1920071ed9",
              "parentUUID": "402da432-d5c4-4806-bd7d-3833aed9f624",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "The email should be present in the footer of the letter",
              "fullTitle": "Letter The email should be present in the footer of the letter",
              "timedOut": false,
              "duration": 23,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('letter-org-email'));\ngetTitle.getText('value').then(function(value) {\nassert.equal(value, '');\n});",
              "err": {},
              "uuid": "476765f2-e5f4-498d-a897-40496b359325",
              "parentUUID": "402da432-d5c4-4806-bd7d-3833aed9f624",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "The address should be present in the footer of the letter",
              "fullTitle": "Letter The address should be present in the footer of the letter",
              "timedOut": false,
              "duration": 25,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('letter-org-address'));\ngetTitle.getText('value').then(function(value) {\nassert.equal(value, '');\n});\ndriver.quit();",
              "err": {},
              "uuid": "31b88309-f25b-4706-9ca5-8b6ff60daf7c",
              "parentUUID": "402da432-d5c4-4806-bd7d-3833aed9f624",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a6af429b-7669-4c82-a4af-6c26cba7570a",
            "38fe7df4-464a-42df-b235-754d2396a63c",
            "7587bb79-5997-42bf-a09f-af2a008c0636",
            "748f28f5-05c2-4eb2-9a20-48300b055cdb",
            "1b07f9e3-5f9a-4398-95ad-d4c147c67613",
            "bcb61495-959c-49ef-a307-e233046fd46c",
            "fbd7d9c8-a8bd-40bb-9bb4-75dbdb7c5e12",
            "e596b601-b854-44b9-a707-3cfbe9384410",
            "5d7fafc9-1ab3-4452-a49f-df554c3dbab5",
            "f0ab9413-84fa-449f-ba40-f281d6aee6b3",
            "1a5f63ec-e0be-4521-b487-c6f24672be58",
            "162980a2-cfc9-48d0-a672-fc880de9fc72",
            "d045ffb8-1c59-47d1-9e38-7f1920071ed9",
            "476765f2-e5f4-498d-a897-40496b359325",
            "31b88309-f25b-4706-9ca5-8b6ff60daf7c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5343,
          "root": false,
          "rootEmpty": false,
          "_timeout": 15000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}